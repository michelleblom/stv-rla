VALID BALLOTS 46909
10 ballot checks required to assert that first winner has a quota's worth of votes
AUD TV 0.4396088687641502, ss 47
AG*(3,1) = 32
AG*(3,2) = 33
AG*(3,4) = 33
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 32
AG*(3,2) = 33
AG*(3,4) = 33
NL(3,4) = 31, AG*'s used 32
NL(3,1) = 32, AG*'s used 0
NL(3,2) = 31, AG*'s used 32
Max in loop 47, 0.4396088687641502
AUD TV 0.48960886876415016, ss 21
AG*(3,1) = 33
AG*(3,2) = 34
AG*(3,4) = 33
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 33
AG*(3,2) = 34
AG*(3,4) = 33
NL(3,4) = 31, AG*'s used 33
NL(3,1) = 29, AG*'s used 33
NL(3,2) = 28, AG*'s used 33
Max in loop 33, 0.48960886876415016
AUD TV 0.5396088687641502, ss 12
AG*(3,1) = 33
AG*(3,2) = 35
AG*(3,4) = 34
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 33
AG*(3,2) = 35
AG*(3,4) = 34
NL(3,4) = 32, AG*'s used 33
NL(3,1) = 33, AG*'s used 0
NL(3,2) = 33, AG*'s used 33
Max in loop 33, 0.5396088687641502
AUD TV 0.5896088687641502, ss 8
AG*(3,1) = 34
AG*(3,2) = 36
AG*(3,4) = 35
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 34
AG*(3,2) = 36
AG*(3,4) = 35
NL(3,4) = 32, AG*'s used 34
NL(3,1) = 34, AG*'s used 0
NL(3,2) = 34, AG*'s used 34
Max in loop 34, 0.5896088687641502
Sample size to show min tv of 0.1948044343820751 is 17
AUD TV 0.4396088687641502, ss 47
AG*(3,1) = 30
AG*(3,2) = 31
AG*(3,4) = 31
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 30
AG*(3,2) = 31
AG*(3,4) = 31
NL(3,4) = 29, AG*'s used 30
NL(3,1) = 30, AG*'s used 0
NL(3,2) = 29, AG*'s used 30
Max in loop 47, 0.4396088687641502
AUD TV 0.48960886876415016, ss 21
AG*(3,1) = 31
AG*(3,2) = 32
AG*(3,4) = 31
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 31
AG*(3,2) = 32
AG*(3,4) = 31
NL(3,4) = 29, AG*'s used 31
NL(3,1) = 27, AG*'s used 31
NL(3,2) = 25, AG*'s used 31
Max in loop 31, 0.48960886876415016
AUD TV 0.5396088687641502, ss 12
AG*(3,1) = 31
AG*(3,2) = 33
AG*(3,4) = 32
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 31
AG*(3,2) = 33
AG*(3,4) = 32
NL(3,4) = 30, AG*'s used 31
NL(3,1) = 31, AG*'s used 0
NL(3,2) = 30, AG*'s used 31
Max in loop 31, 0.5396088687641502
AUD TV 0.5896088687641502, ss 8
AG*(3,1) = 32
AG*(3,2) = 34
AG*(3,4) = 32
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 32
AG*(3,2) = 34
AG*(3,4) = 32
NL(3,4) = 30, AG*'s used 32
NL(3,1) = 28, AG*'s used 32
NL(3,2) = 27, AG*'s used 32
Max in loop 32, 0.5896088687641502
Sample size to show min tv of 0.2448044343820751 is 21
AUD TV 0.4396088687641502, ss 47
AG*(3,1) = 30
AG*(3,2) = 30
AG*(3,4) = 30
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 30
AG*(3,2) = 30
AG*(3,4) = 30
NL(3,4) = 25, AG*'s used 30
NL(3,1) = 24, AG*'s used 30
NL(3,2) = 24, AG*'s used 30
Max in loop 47, 0.4396088687641502
AUD TV 0.48960886876415016, ss 21
AG*(3,1) = 30
AG*(3,2) = 31
AG*(3,4) = 31
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 30
AG*(3,2) = 31
AG*(3,4) = 31
NL(3,4) = 28, AG*'s used 30
NL(3,1) = 30, AG*'s used 0
NL(3,2) = 29, AG*'s used 30
Max in loop 30, 0.48960886876415016
AUD TV 0.5396088687641502, ss 12
AG*(3,1) = 31
AG*(3,2) = 32
AG*(3,4) = 31
AG*(0,1) = 10
AG*(0,2) = 9
AG*(0,3) = 17
AG*(0,4) = 10
AG*(3,1) = 31
AG*(3,2) = 32
AG*(3,4) = 31
NL(3,4) = 29, AG*'s used 31
NL(3,1) = 27, AG*'s used 31
NL(3,2) = 25, AG*'s used 31
Max in loop 31, 0.5396088687641502
Sample size to show min tv of 0.2948044343820751 is 31
Sample size required for audit is 30 ballots
------------------------------------------------
Assertion set BEFORE filtering:
(0, 'LT', 0.2448044343820751, 21)
(0, 'MT', 0.48960886876415016, 21)
(3, 'AG*', 1, 30)
(3, 'NL', 4, 28)
(3, 'NL', 1, 30)
(3, 'NL', 2, 29)
(0, 'QT', None, 10)
------------------------------------------------
Final set of assertions AFTER filtering:
(0, 'LT', 0.2448044343820751, 21)
(0, 'MT', 0.48960886876415016, 21)
(3, 'AG*', 1, 30)
(3, 'NL', 4, 28)
(3, 'NL', 2, 29)
(0, 'QT', None, 10)
------------------------------------------------
Explanations for AG* inclusion:
   Explanation for (3, 'AG*', 1, 30): []
------------------------------------------------
