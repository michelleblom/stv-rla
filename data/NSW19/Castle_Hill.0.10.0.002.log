VALID BALLOTS 52571
6 ballot checks required to assert that first winner has a quota's worth of votes
AUD TV 0.5638569090354261, ss 29
AG*(0,1) = 54
AG*(0,2) = 39
AG*(0,1) = 54
AG*(0,2) = 39
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 39, AG*'s used 0
NL(0,1) = 52, AG*'s used 39
Max in loop 52, 0.5638569090354261
AUD TV 0.6138569090354261, ss 12
AG*(0,1) = 56
AG*(0,2) = 40
AG*(0,1) = 56
AG*(0,2) = 40
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 40, AG*'s used 0
NL(0,1) = 53, AG*'s used 40
Max in loop 53, 0.6138569090354261
Breaking out of inner loop 53 > 52
Sample size to show min tv of 0.256928454517713 is 9
AUD TV 0.5638569090354261, ss 29
AG*(0,1) = 47
AG*(0,2) = 35
AG*(0,1) = 47
AG*(0,2) = 35
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 35, AG*'s used 0
NL(0,1) = 43, AG*'s used 35
Max in loop 43, 0.5638569090354261
AUD TV 0.6138569090354261, ss 12
AG*(0,1) = 49
AG*(0,2) = 36
AG*(0,1) = 49
AG*(0,2) = 36
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 36, AG*'s used 0
NL(0,1) = 44, AG*'s used 36
Max in loop 44, 0.6138569090354261
Breaking out of inner loop 44 > 43
New mintv = 0.306928454517713
Sample size to show min tv of 0.306928454517713 is 11
AUD TV 0.5638569090354261, ss 29
AG*(0,1) = 46
AG*(0,2) = 34
AG*(0,1) = 46
AG*(0,2) = 34
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 34, AG*'s used 0
NL(0,1) = 42, AG*'s used 34
Max in loop 42, 0.5638569090354261
AUD TV 0.6138569090354261, ss 12
AG*(0,1) = 47
AG*(0,2) = 35
AG*(0,1) = 47
AG*(0,2) = 35
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 35, AG*'s used 0
NL(0,1) = 43, AG*'s used 35
Max in loop 43, 0.6138569090354261
Breaking out of inner loop 43 > 42
New mintv = 0.356928454517713
Sample size to show min tv of 0.356928454517713 is 13
AUD TV 0.5638569090354261, ss 29
AG*(0,1) = 45
AG*(0,2) = 34
AG*(0,1) = 45
AG*(0,2) = 34
AG*(1,2) = 52571
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 34, AG*'s used 0
NL(0,1) = 40, AG*'s used 34
Max in loop 40, 0.5638569090354261
AUD TV 0.6138569090354261, ss 12
AG*(0,1) = 46
AG*(0,2) = 35
AG*(0,1) = 46
AG*(0,2) = 35
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 35, AG*'s used 0
NL(0,1) = 41, AG*'s used 35
Max in loop 41, 0.6138569090354261
Breaking out of inner loop 41 > 40
New mintv = 0.406928454517713
Sample size to show min tv of 0.406928454517713 is 18
AUD TV 0.5638569090354261, ss 29
AG*(0,1) = 44
AG*(0,2) = 33
AG*(0,1) = 44
AG*(0,2) = 33
AG*(1,2) = 52571
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 33, AG*'s used 0
NL(0,1) = 39, AG*'s used 33
Max in loop 39, 0.5638569090354261
AUD TV 0.6138569090354261, ss 12
AG*(0,1) = 45
AG*(0,2) = 34
AG*(0,1) = 45
AG*(0,2) = 34
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 34, AG*'s used 0
NL(0,1) = 40, AG*'s used 34
Max in loop 40, 0.6138569090354261
Breaking out of inner loop 40 > 39
New mintv = 0.45692845451771297
Sample size to show min tv of 0.45692845451771297 is 31
AUD TV 0.5638569090354261, ss 29
AG*(0,1) = 43
AG*(0,2) = 33
AG*(0,1) = 43
AG*(0,2) = 33
AG*(1,2) = 5644
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 33, AG*'s used 0
NL(0,1) = 38, AG*'s used 33
Max in loop 38, 0.5638569090354261
AUD TV 0.6138569090354261, ss 12
AG*(0,1) = 44
AG*(0,2) = 33
AG*(0,1) = 44
AG*(0,2) = 33
AG*(1,2) = 52571
AG*(3,0) = 10
AG*(3,1) = 8
AG*(3,2) = 7
NL(0,2) = 33, AG*'s used 0
NL(0,1) = 39, AG*'s used 33
Max in loop 39, 0.6138569090354261
Breaking out of inner loop 39 > 38
New mintv = 0.506928454517713
Sample size to show min tv of 0.506928454517713 is 240
Sample size required for audit is 38 ballots
------------------------------------------------
Assertion set BEFORE filtering:
(0, 'AG*', 2, 33)
(3, 'QT', None, 6)
(3, 'LT', None, (0.45692845451771297, 31))
(3, 'MT', None, (0.5638569090354261, 29))
(0, 'NL', 2, 33)
(0, 'NL', 1, 38)
------------------------------------------------
Final set of assertions AFTER filtering:
(0, 'AG*', 2, 33)
(3, 'QT', None, 6)
(3, 'LT', None, (0.45692845451771297, 31))
(3, 'MT', None, (0.5638569090354261, 29))
(0, 'NL', 1, 38)
------------------------------------------------
Explanations for AG* inclusion:
   Explanation for (0, 'AG*', 2, 33): []
------------------------------------------------
