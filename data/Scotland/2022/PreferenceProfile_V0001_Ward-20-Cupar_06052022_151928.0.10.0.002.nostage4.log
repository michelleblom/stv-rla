VALID BALLOTS 6095
108 ballot checks required to assert that first winner has a quota's worth of votes
AUD TV 0.10925925925925926, ss 115
AG*(5,1) = 22
AG*(5,2) = 21
AG*(5,4) = 35
AG*(5,6) = 29
AG*(5,8) = 66
AG*(5,9) = 22
AG*(3,1) = 37
AG*(3,2) = 35
AG*(3,4) = 95
AG*(3,8) = 116
AG*(3,9) = 37
AG*(5,1) = 22
AG*(5,2) = 21
AG*(5,4) = 35
AG*(5,6) = 29
AG*(5,8) = 66
AG*(5,9) = 22
AG*(7,1) = 14
AG*(7,2) = 14
AG*(7,3) = 47
AG*(7,4) = 19
AG*(7,5) = 105
AG*(7,6) = 31
AG*(7,8) = 20
AG*(7,9) = 14
AG*(8,1) = 137
AG*(8,2) = 94
AG*(8,9) = 123
NL(5,9) = 21, AG*'s used 21
NL(5,1) = 21, AG*'s used 22
NL(5,2) = 21, AG*'s used 0
NL(5,4) = 28, AG*'s used 29
NL(5,6) = 28, AG*'s used 22
NL(5,8) = 42, AG*'s used 35
NL(5,3) = 821, AG*'s used 66
Max in loop 821, 0.10925925925925926
AUD TV 0.15925925925925927, ss 54
AG*(5,1) = 22
AG*(5,2) = 22
AG*(5,4) = 37
AG*(5,6) = 29
AG*(5,8) = 72
AG*(5,9) = 22
AG*(3,1) = 37
AG*(3,2) = 35
AG*(3,4) = 97
AG*(3,8) = 123
AG*(3,9) = 37
AG*(5,1) = 22
AG*(5,2) = 22
AG*(5,4) = 37
AG*(5,6) = 29
AG*(5,8) = 72
AG*(5,9) = 22
AG*(7,1) = 14
AG*(7,2) = 14
AG*(7,3) = 47
AG*(7,4) = 19
AG*(7,5) = 105
AG*(7,6) = 31
AG*(7,8) = 20
AG*(7,9) = 14
AG*(8,1) = 142
AG*(8,2) = 96
AG*(8,9) = 128
NL(5,9) = 21, AG*'s used 22
NL(5,1) = 22, AG*'s used 22
NL(5,2) = 21, AG*'s used 22
NL(5,4) = 29, AG*'s used 29
NL(5,6) = 28, AG*'s used 22
NL(5,8) = 44, AG*'s used 37
NL(5,3) NOT POSSIBLE
Max in loop inf, 0.15925925925925927
Breaking out of inner loop inf > 821
Sample size to show min tv of 0.02962962962962963 is 210
AUD TV 0.10925925925925926, ss 115
AG*(5,1) = 22
AG*(5,2) = 21
AG*(5,4) = 35
AG*(5,6) = 29
AG*(5,8) = 65
AG*(5,9) = 21
AG*(3,1) = 35
AG*(3,2) = 33
AG*(3,4) = 82
AG*(3,8) = 98
AG*(3,9) = 34
AG*(5,1) = 22
AG*(5,2) = 21
AG*(5,4) = 35
AG*(5,6) = 29
AG*(5,8) = 65
AG*(5,9) = 21
AG*(7,1) = 14
AG*(7,2) = 14
AG*(7,3) = 47
AG*(7,4) = 19
AG*(7,5) = 105
AG*(7,6) = 31
AG*(7,8) = 20
AG*(7,9) = 14
AG*(8,1) = 133
AG*(8,2) = 92
AG*(8,9) = 120
NL(5,9) = 21, AG*'s used 21
NL(5,1) = 21, AG*'s used 21
NL(5,2) = 21, AG*'s used 21
NL(5,4) = 28, AG*'s used 29
NL(5,6) = 28, AG*'s used 22
NL(5,8) = 41, AG*'s used 35
NL(5,3) = 645, AG*'s used 65
Max in loop 645, 0.10925925925925926
AUD TV 0.15925925925925927, ss 54
AG*(5,1) = 22
AG*(5,2) = 21
AG*(5,4) = 36
AG*(5,6) = 29
AG*(5,8) = 71
AG*(5,9) = 22
AG*(3,1) = 35
AG*(3,2) = 33
AG*(3,4) = 84
AG*(3,8) = 102
AG*(3,9) = 35
AG*(5,1) = 22
AG*(5,2) = 21
AG*(5,4) = 36
AG*(5,6) = 29
AG*(5,8) = 71
AG*(5,9) = 22
AG*(7,1) = 14
AG*(7,2) = 14
AG*(7,3) = 47
AG*(7,4) = 19
AG*(7,5) = 105
AG*(7,6) = 31
AG*(7,8) = 20
AG*(7,9) = 14
AG*(8,1) = 138
AG*(8,2) = 94
AG*(8,9) = 124
NL(5,9) = 21, AG*'s used 21
NL(5,1) = 22, AG*'s used 22
NL(5,2) = 21, AG*'s used 0
NL(5,4) = 29, AG*'s used 29
NL(5,6) = 28, AG*'s used 22
NL(5,8) = 44, AG*'s used 36
NL(5,3) NOT POSSIBLE
Max in loop inf, 0.15925925925925927
Breaking out of inner loop inf > 645
New mintv = 0.07962962962962963
Sample size required for audit is 645 ballots
------------------------------------------------
Assertion set BEFORE filtering:
(4, 'AG*', 3, 35)
(4, 'NL', 3, 29)
(4, 'AG*', 1, 21)
(4, 'NL', 1, 21)
(6, 'LT', None, (0.02962962962962963, 210))
(6, 'QT', None, 108)
(4, 'AG*', 5, 29)
(4, 'NL', 7, 41)
(4, 'AG*', 0, 22)
(4, 'AG*', 8, 21)
(4, 'NL', 8, 21)
(4, 'NL', 5, 28)
(4, 'AG*', 7, 65)
(4, 'NL', 0, 21)
(6, 'MT', None, (0.10925925925925926, 115))
(4, 'NL', 2, 645)
------------------------------------------------
Final set of assertions AFTER filtering:
(4, 'AG*', 3, 35)
(4, 'NL', 3, 29)
(4, 'AG*', 1, 21)
(4, 'NL', 1, 21)
(6, 'LT', None, (0.02962962962962963, 210))
(6, 'QT', None, 108)
(4, 'AG*', 5, 29)
(4, 'NL', 7, 41)
(4, 'AG*', 0, 22)
(4, 'AG*', 8, 21)
(4, 'NL', 8, 21)
(4, 'NL', 5, 28)
(4, 'AG*', 7, 65)
(4, 'NL', 0, 21)
(6, 'MT', None, (0.10925925925925926, 115))
(4, 'NL', 2, 645)
------------------------------------------------
Explanations for AG* inclusion:
   Explanation for (4, 'AG*', 3, 35): []
   Explanation for (4, 'AG*', 1, 21): []
   Explanation for (4, 'AG*', 5, 29): []
   Explanation for (4, 'AG*', 0, 22): []
   Explanation for (4, 'AG*', 8, 21): []
   Explanation for (4, 'AG*', 7, 65): []
------------------------------------------------
